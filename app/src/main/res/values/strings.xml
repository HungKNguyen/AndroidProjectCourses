<resources>
    <string name="app_name">Course Planner</string>
    <string name="main_activity">Your Planner</string>
    <string name="choose_course">Add Course</string>
    <string name="CMSC_106_text">An introduction to some of the technologies underlying the world wide web, with emphasis on client-side programming. Topics covered include introductions to HTML, CSS, and JavaScript. This course is suitable for students with no prior experience in programming.</string>
    <string name="CMSC_150_text">An introduction to computer programming for potential mathematics/computer science majors and other students with a strong interest in computing. Topics include elementary programming constructs, design and implementation of algorithms, and object-oriented programming. Introductory instruction in the Java language. </string>
    <string name="CMSC_205_text">An introduction to programming with emphasis on learning from data in order to gain useful insights. Topics focus on elementary programming concepts in the R language and the necessary tools to handle, analyze and interpret data. This course will be taught in a workshop format, and students will complete regular assignments and a final project that provide hands-on programming/analysis experiences.</string>
    <string name="CMSC_208_text">An overview of techniques used to discover structural patterns and make predictions using complex datasets that are prevalent in today\'s world. The central machine learning tasks of classification, clustering, and regression will be explored, along with methods for training models and evaluating predictions. This course will be taught in a workshop format. Assignments will involve the use of statistical software.</string>
    <string name="CMSC_210_text">An introduction to computer programming with an emphasis on numerical applications in mathematics and the sciences. Topics include elementary programming concepts in the Python language, design and implementation of numerical algorithms, and an introduction to symbolic computation.</string>
    <string name="CMSC_250_text">A study of more advanced programming techniques in the Java language. Topics include graphical user interfaces, exception-handling, multithreading, networking, databases, and web applications. </string>
    <string name="CMSC_270_text">A study of advanced programming and an introduction to data structures. Topics focus on programming skills needed for the design and implementation of standard data structures such as lists, trees, and graphs and their associated algorithms. Additional topics include recursion, analysis of algorithms, and advanced aspects of object-oriented programming in the C++ language.</string>
    <string name="CMSC_405_text">This course builds on CMSC/STAT 205, providing a deeper exploration of statistical computing in R. Topics might include efficient programming techniques, parallelization, statistical algorithms, advanced data visualization, and creation of R packages. Statistical software will be used extensively in this course. The class will be taught in an interactive lab-based format. There will be regular assignments and a project.</string>
    <string name="CMSC_410_text">An introduction to techniques for analyzing and modeling systems for implementation as computer programs. Topics include a survey of modeling methodologies for structured and object-oriented systems and case studies of system development. Also, applications of analysis and design methods to database design and design of distributed systems.</string>
    <string name="CMSC_420_text">The fundamentals of computer graphics and their applications in visualizing a variety of scientific phenomena. Topics include graphics primitives, two- and three-dimensional transformations, three-dimensional viewing techniques, spline curves, surface patches, hidden line algorithms, ray tracing, radiosity, texture-mapping, and fractals.</string>
    <string name="CMSC_435_text">The structure and function of computers as viewed from the hardware/software interface. Hardware topics include elementary digital logic, data storage devices, dataflow pathways, and central processor organization with special emphasis on parallelism. Corresponding software topics include data representation and manipulation, instruction sets, addressing techniques, and program control mechanisms.</string>
    <string name="CMSC_460_text">An examination of issues in the design and implementation of programming languages. Students will first gain proficiency in the functional programming paradigm (using Scheme), and will then design and implement, in Scheme, an interpreter for a brand-new programming language.</string>
    <string name="CMSC_470_text">A detailed investigation into foundational concepts of artificial intelligence: search, knowledge representation, and automated planning. Specific topics include uninformed and heuristic search techniques, logic-based knowledge representations, automated theorem-proving, logic programming (Prolog), action representations, means-ends analysis, regression and partial-order planning, and reachability analysis using graphs.</string>
    <string name="CMSC_480_text">A survey of some fundamental aspects of computer operating systems and their impact on the performance of software. Topics include process and memory management, system level input/output, concurrency, and parallel programming.</string>
    <string name="CMSC_510_text">Advanced data structures and the time and space efficiency of the algorithms that manipulate such structures. Topics include proof of correctness for algorithms, recursion, dynamic programming, optimized tree structures, union-find problems, graphs, path-finding algorithms, and string search algorithms.</string>
    <string name="CMSC_515_text">A study of programming in the abstract, leading to an understanding of the precise nature and limitations of computing machines. Topics include universal computing machines such as Turing machines, decidable and undecidable predicates, regular and pushdown automata, and regular and context-free grammars. </string>
    <string name="CMSC_600_text">Intended as a capstone experience for math-computer science majors, this course provides a forum for seniors to formally present the results of their required independent study projects. CMSC minors and other students doing senior projects involving computing are also invited to present their work in this seminar.</string>
    <string name="CMSC_698_text">Students in the graduating cohort will present proposals, progress reports, and preliminary results of their self-directed senior projects to be evaluated by their peers while learning about each others\' capstone projects in computer science.</string>

</resources>